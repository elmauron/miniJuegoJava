plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'org.openjfx.javafxplugin' version '0.0.9'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.test'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
		vendor = JvmVendorSpec.ADOPTIUM
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven {
		url "https://local.repository1/content/groups/public-maven.dev/"
	}
	jcenter()
}

ext {
	set('springAiVersion', "1.0.0-M2")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

task runApp(type: JavaExec) {
	group = 'application'
	description = 'Run the Spring Boot application'
	classpath = sourceSets.main.runtimeClasspath
	main = 'com.example.minijuegojava.gui.BasicSwingApp'
}

tasks.withType(JavaCompile) {
	options.fork = true
	options.forkOptions.executable = javaToolchains.launcherFor {
		languageVersion = JavaLanguageVersion.of(17)
	}.get().executablePath.asFile.absolutePath
}